{"ast":null,"code":"var _jsxFileName = \"/home/egm/Desktop/test stage/cours/REACT/drapeaux/src/components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true);\n  const [rangeValue, setRangeValue] = useState(40);\n  const [selectedRadio, setSelectdRadio] = useState('');\n  const radios = ['Africa', 'America', 'Asia', 'Europe', 'Oceania'];\n  useEffect(() => {\n    if (playOnce) {\n      axios.get(\"https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag\").then(res => {\n        setData(res.data);\n        setPlayOnce(false);\n      });\n    }\n\n    const sortedCountry = () => {\n      const countryObj = Object.keys(data).map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        return b.population - a.population;\n      });\n      sortedArray.length = rangeValue;\n      setSortedData(sortedArray);\n    };\n\n    sortedCountry();\n  }, [data, rangeValue, playOnce]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        value: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: radios.map(radio => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: radio,\n            id: radio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: radio,\n            children: radio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, radio, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: [sortedData.map(country => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"3WWhHYn83bnuGJX0VwSxVaz/fPQ=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/home/egm/Desktop/test stage/cours/REACT/drapeaux/src/components/Countries.js"],"names":["React","useEffect","useState","axios","Card","Countries","data","setData","sortedData","setSortedData","playOnce","setPlayOnce","rangeValue","setRangeValue","selectedRadio","setSelectdRadio","radios","get","then","res","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","length","e","target","value","radio","country","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport Card from './Card';\n\nconst Countries = () => {\n    const [data, setData] = useState([]);\n    const [sortedData, setSortedData] = useState([]);\n    const [playOnce, setPlayOnce] = useState(true);\n    const [rangeValue, setRangeValue] = useState(40);\n    const [selectedRadio, setSelectdRadio] = useState('');\n    const radios = ['Africa', 'America', 'Asia', 'Europe', 'Oceania']\n\n    useEffect(() => {\n        if (playOnce) {\n            axios.get(\n                \"https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag\"\n            )\n            .then((res) => {\n                setData(res.data)\n                setPlayOnce(false);\n            });\n        }\n        const sortedCountry = () => {\n            const countryObj = Object.keys(data).map((i) => data[i]);\n            const sortedArray = countryObj.sort((a, b) => {\n                return b.population - a.population;\n            });\n            sortedArray.length = rangeValue;\n            setSortedData(sortedArray)\n        }\n        sortedCountry();\n    }, [data, rangeValue, playOnce]);\n\n    return (\n        <div className=\"countries\">\n            <div className=\"sort-container\">\n                <input type=\"range\" min=\"1\" max=\"250\" value={rangeValue}\n                onChange={(e) => setRangeValue(e.target.value)} />\n            </div>\n            <ul>\n                {radios.map((radio) => {\n                    return (\n                        <li key={radio}>\n                            <input type=\"radio\" value={radio} id={radio} />\n                            <label htmlFor={radio}>{radio}</label>\n                        </li>\n                    )\n                })}\n            </ul>\n            <ul className=\"countries-list\">\n                {sortedData.map((country) => (\n                    <Card country={country} key={country.name}/>\n                ))};\n            </ul>\n        </div>\n    );\n};\n\nexport default Countries;"]},"metadata":{},"sourceType":"module"}